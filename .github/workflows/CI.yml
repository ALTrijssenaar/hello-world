name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      IS_MAIN: ${{ github.ref == 'refs/heads/main' }}
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: 5.12.0

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Hello, world!
        run: echo Hello, world!

      - name: Create Artifact
        run: zip -x '*.git*' -r release.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hello-world_${{ steps.gitversion.outputs.semVer }}
          path: release.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Extract owner and repo
        uses: jungwinter/split@v1
        id: repo
        with:
          seperator: "/"
          msg: ${{ github.repository }}

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: hello-world_${{ needs.build.outputs.semVer }}

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "3.0.x"

      - name: Install GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@v0.9
        with:
          versionSpec: "0.11.x"

      - name: Create release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/create@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ steps.repo.outputs._0 }}
          repository: ${{ steps.repo.outputs._1 }}
          milestone: ${{ needs.build.outputs.semVer }}
          name: "v${{ needs.build.outputs.semVer }}"
          assets: |
            release.zip

      - name: Publish release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/publish@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ steps.repo.outputs._0 }}
          repository: ${{ steps.repo.outputs._1 }}
          milestone: ${{ needs.build.outputs.semVer }}

      - name: Close release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/close@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ steps.repo.outputs._0 }}
          repository: ${{ steps.repo.outputs._1 }}
          milestone: ${{ needs.build.outputs.semVer }}
